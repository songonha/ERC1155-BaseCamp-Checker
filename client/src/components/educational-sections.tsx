import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Badge } from '@/components/ui/badge';
import { 
  ChevronDown, 
  BookOpen, 
  Globe, 
  Code, 
  Lightbulb,
  Check,
  Wrench,
  Image,
  Layers,
  Palette
} from 'lucide-react';

/**
 * Component ch·ª©a t·∫•t c·∫£ c√°c section gi√°o d·ª•c
 * Gi√∫p h·ªçc sinh hi·ªÉu v·ªÅ blockchain, NFT, v√† c√°c c√¥ng ngh·ªá li√™n quan
 */
export function EducationalSections() {
  return (
    <div className="space-y-6">
      <ERC1155Section />
      <BaseNetworkSection />
      <CodeExplanationSection />
      <ProjectExtensionSection />
    </div>
  );
}

/**
 * Section gi·∫£i th√≠ch v·ªÅ ERC1155
 */
function ERC1155Section() {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <Card className="educational-card">
      <CardContent className="p-6">
        <Button
          variant="ghost"
          className="w-full flex items-center justify-between text-left p-0 hover:bg-transparent"
          onClick={() => setIsExpanded(!isExpanded)}
        >
          <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
            <BookOpen className="h-5 w-5 text-blue-600" />
            <span>üìö ERC1155 l√† g√¨?</span>
          </h3>
          <ChevronDown 
            className={`h-5 w-5 text-gray-400 transition-transform ${
              isExpanded ? 'rotate-180' : ''
            }`} 
          />
        </Button>
        
        {isExpanded && (
          <div className="mt-4 space-y-4 expandable-section">
            <p className="text-gray-600">
              ERC1155 l√† m·ªôt chu·∫©n NFT th√¥ng minh cho ph√©p m·ªôt h·ª£p ƒë·ªìng ch·ª©a nhi·ªÅu lo·∫°i token kh√°c nhau.
            </p>
            
            <Alert className="bg-blue-50 border-blue-200">
              <Lightbulb className="h-4 w-4 text-blue-600" />
              <AlertDescription>
                <h4 className="font-medium text-gray-900 mb-2">V√≠ d·ª• th·ª±c t·∫ø:</h4>
                <p className="text-sm text-gray-700">
                  Gi·ªëng nh∆∞ m·ªôt h·ªôp ƒë·ªì ch∆°i c√≥ th·ªÉ ch·ª©a nhi·ªÅu lo·∫°i v·∫≠t ph·∫©m: b√∫p b√™, xe h∆°i, lego... 
                  ERC1155 cho ph√©p m·ªôt h·ª£p ƒë·ªìng ch·ª©a c·∫£ skin game, v·∫≠t ph·∫©m, v√† th·∫ª b√†i c√πng l√∫c.
                </p>
              </AlertDescription>
            </Alert>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-green-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2 flex items-center space-x-2">
                  <Check className="h-4 w-4 text-green-600" />
                  <span>∆Øu ƒëi·ªÉm ERC1155</span>
                </h4>
                <ul className="text-sm text-gray-700 space-y-1">
                  <li>‚Ä¢ Ti·∫øt ki·ªám gas fee</li>
                  <li>‚Ä¢ H·ªó tr·ª£ nhi·ªÅu token trong 1 h·ª£p ƒë·ªìng</li>
                  <li>‚Ä¢ Chuy·ªÉn giao h√†ng lo·∫°t</li>
                  <li>‚Ä¢ Linh ho·∫°t h∆°n ERC721</li>
                </ul>
              </div>
              
              <div className="bg-purple-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2">·ª®ng d·ª•ng th·ª±c t·∫ø</h4>
                <p className="text-sm text-gray-700">
                  ƒê∆∞·ª£c s·ª≠ d·ª•ng nhi·ªÅu trong game blockchain, marketplace NFT, 
                  v√† c√°c ·ª©ng d·ª•ng c·∫ßn qu·∫£n l√Ω nhi·ªÅu lo·∫°i t√†i s·∫£n s·ªë.
                </p>
              </div>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
}

/**
 * Section gi·∫£i th√≠ch v·ªÅ m·∫°ng Base
 */
function BaseNetworkSection() {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <Card className="educational-card">
      <CardContent className="p-6">
        <Button
          variant="ghost"
          className="w-full flex items-center justify-between text-left p-0 hover:bg-transparent"
          onClick={() => setIsExpanded(!isExpanded)}
        >
          <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
            <Globe className="h-5 w-5 text-blue-600" />
            <span>üåê M·∫°ng Base l√† g√¨?</span>
          </h3>
          <ChevronDown 
            className={`h-5 w-5 text-gray-400 transition-transform ${
              isExpanded ? 'rotate-180' : ''
            }`} 
          />
        </Button>
        
        {isExpanded && (
          <div className="mt-4 space-y-4 expandable-section">
            <p className="text-gray-600">
              Base l√† m·ªôt blockchain layer-2 ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n Ethereum, gi√∫p giao d·ªãch nhanh h∆°n v√† r·∫ª h∆°n.
            </p>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-green-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2 flex items-center space-x-2">
                  <Check className="h-4 w-4 text-green-600" />
                  <span>∆Øu ƒëi·ªÉm</span>
                </h4>
                <ul className="text-sm text-gray-700 space-y-1">
                  <li>‚Ä¢ Giao d·ªãch nhanh (2-3 gi√¢y)</li>
                  <li>‚Ä¢ Ph√≠ th·∫•p (&lt; $0.01)</li>
                  <li>‚Ä¢ T∆∞∆°ng th√≠ch 100% v·ªõi Ethereum</li>
                  <li>‚Ä¢ ƒê∆∞·ª£c Coinbase h·ªó tr·ª£</li>
                </ul>
              </div>
              
              <div className="bg-blue-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2 flex items-center space-x-2">
                  <Wrench className="h-4 w-4 text-blue-600" />
                  <span>C√¥ng ngh·ªá</span>
                </h4>
                <div className="text-sm text-gray-700 space-y-2">
                  <p>
                    <strong>Optimistic Rollups:</strong> X·ª≠ l√Ω giao d·ªãch ngo√†i chu·ªói ch√≠nh c·ªßa Ethereum.
                  </p>
                  <Badge variant="outline" className="text-xs">
                    Chain ID: 8453
                  </Badge>
                </div>
              </div>
            </div>

            <Alert className="bg-yellow-50 border-yellow-200">
              <AlertDescription className="text-yellow-800">
                <strong>T·∫°i sao ch·ªçn Base?</strong> Base ƒë∆∞·ª£c x√¢y d·ª±ng b·ªüi Coinbase - m·ªôt trong nh·ªØng 
                s√†n giao d·ªãch crypto l·ªõn nh·∫•t th·∫ø gi·ªõi, ƒë·∫£m b·∫£o t√≠nh ·ªïn ƒë·ªãnh v√† b·∫£o m·∫≠t cao.
              </AlertDescription>
            </Alert>
          </div>
        )}
      </CardContent>
    </Card>
  );
}

/**
 * Section gi·∫£i th√≠ch c√°ch code ho·∫°t ƒë·ªông
 */
function CodeExplanationSection() {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <Card className="educational-card">
      <CardContent className="p-6">
        <Button
          variant="ghost"
          className="w-full flex items-center justify-between text-left p-0 hover:bg-transparent"
          onClick={() => setIsExpanded(!isExpanded)}
        >
          <h3 className="text-lg font-semibold text-gray-900 flex items-center space-x-2">
            <Code className="h-5 w-5 text-blue-600" />
            <span>üíª C√°ch code ho·∫°t ƒë·ªông</span>
          </h3>
          <ChevronDown 
            className={`h-5 w-5 text-gray-400 transition-transform ${
              isExpanded ? 'rotate-180' : ''
            }`} 
          />
        </Button>
        
        {isExpanded && (
          <div className="mt-4 space-y-4 expandable-section">
            <Alert className="bg-gray-50 border-gray-200">
              <AlertDescription>
                <h4 className="font-medium text-gray-900 mb-2">C√°c b∆∞·ªõc th·ª±c hi·ªán:</h4>
                <ol className="text-sm text-gray-700 space-y-2 list-decimal list-inside">
                  <li>K·∫øt n·ªëi v·ªõi m·∫°ng Base qua RPC provider</li>
                  <li>X√°c th·ª±c ƒë·ªãa ch·ªâ v√≠ EVM b·∫±ng ethers.js</li>
                  <li>G·ªçi h√†m balanceOf c·ªßa h·ª£p ƒë·ªìng ERC1155</li>
                  <li>Hi·ªÉn th·ªã k·∫øt qu·∫£ cho ng∆∞·ªùi d√πng</li>
                </ol>
              </AlertDescription>
            </Alert>

            <div className="code-block">
              <pre className="text-sm">
                <code className="text-green-400">
                  <span className="text-gray-400">// V√≠ d·ª• code TypeScript</span>{'\n'}
                  <span className="text-blue-400">const</span> <span className="text-white">provider</span> = <span className="text-blue-400">new</span> <span className="text-yellow-400">ethers.JsonRpcProvider</span>(<span className="text-green-300">'BASE_RPC_URL'</span>);{'\n'}
                  <span className="text-blue-400">const</span> <span className="text-white">contract</span> = <span className="text-blue-400">new</span> <span className="text-yellow-400">ethers.Contract</span>(<span className="text-white">contractAddress</span>, <span className="text-white">abi</span>, <span className="text-white">provider</span>);{'\n'}
                  <span className="text-blue-400">const</span> <span className="text-white">balance</span> = <span className="text-blue-400">await</span> <span className="text-white">contract</span>.<span className="text-yellow-400">balanceOf</span>(<span className="text-white">walletAddress</span>, <span className="text-white">tokenId</span>);
                </code>
              </pre>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-blue-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2">Th∆∞ vi·ªán s·ª≠ d·ª•ng</h4>
                <ul className="text-sm text-gray-700 space-y-1">
                  <li>‚Ä¢ <strong>ethers.js:</strong> T∆∞∆°ng t√°c blockchain</li>
                  <li>‚Ä¢ <strong>React:</strong> Giao di·ªán ng∆∞·ªùi d√πng</li>
                  <li>‚Ä¢ <strong>TypeScript:</strong> Type safety</li>
                  <li>‚Ä¢ <strong>Tailwind CSS:</strong> Styling</li>
                </ul>
              </div>
              
              <div className="bg-purple-50 rounded-lg p-4">
                <h4 className="font-medium text-gray-900 mb-2">Ki·∫øn tr√∫c d·ª± √°n</h4>
                <ul className="text-sm text-gray-700 space-y-1">
                  <li>‚Ä¢ <strong>Hooks:</strong> Qu·∫£n l√Ω state logic</li>
                  <li>‚Ä¢ <strong>Services:</strong> Blockchain operations</li>
                  <li>‚Ä¢ <strong>Components:</strong> UI reusable</li>
                  <li>‚Ä¢ <strong>Utils:</strong> Helper functions</li>
                </ul>
              </div>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
}

/**
 * Section g·ª£i √Ω m·ªü r·ªông d·ª± √°n
 */
function ProjectExtensionSection() {
  return (
    <Card className="educational-card">
      <CardContent className="p-6">
        <div className="text-center">
          <h3 className="text-lg font-semibold text-gray-900 mb-2 flex items-center justify-center space-x-2">
            <Lightbulb className="h-5 w-5 text-yellow-500" />
            <span>üöÄ M·ªü r·ªông d·ª± √°n</span>
          </h3>
          <p className="text-gray-600 mb-4">M·ªôt s·ªë √Ω t∆∞·ªüng ƒë·ªÉ ph√°t tri·ªÉn th√™m:</p>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
            <div className="bg-purple-50 rounded-lg p-4">
              <div className="flex items-center justify-center mb-3">
                <Image className="h-8 w-8 text-purple-500" />
              </div>
              <h4 className="font-medium text-gray-900 mb-2">Hi·ªÉn th·ªã h√¨nh ·∫£nh NFT</h4>
              <p className="text-gray-600 text-xs">
                T√≠ch h·ª£p IPFS ƒë·ªÉ hi·ªÉn th·ªã metadata v√† h√¨nh ·∫£nh c·ªßa NFT
              </p>
            </div>
            
            <div className="bg-blue-50 rounded-lg p-4">
              <div className="flex items-center justify-center mb-3">
                <Layers className="h-8 w-8 text-blue-500" />
              </div>
              <h4 className="font-medium text-gray-900 mb-2">H·ªó tr·ª£ nhi·ªÅu h·ª£p ƒë·ªìng</h4>
              <p className="text-gray-600 text-xs">
                Cho ph√©p ki·ªÉm tra NFT t·ª´ c√°c collection kh√°c nhau
              </p>
            </div>
            
            <div className="bg-green-50 rounded-lg p-4">
              <div className="flex items-center justify-center mb-3">
                <Palette className="h-8 w-8 text-green-500" />
              </div>
              <h4 className="font-medium text-gray-900 mb-2">C·∫£i thi·ªán giao di·ªán</h4>
              <p className="text-gray-600 text-xs">
                Th√™m dark mode, animations, v√† responsive design
              </p>
            </div>
          </div>

          <div className="mt-6 pt-4 border-t border-gray-200">
            <Alert className="bg-gradient-to-r from-blue-50 to-purple-50 border-blue-200">
              <AlertDescription className="text-center">
                <p className="text-sm text-gray-700 mb-2">
                  üí° <strong>Khuy·∫øn kh√≠ch kh√°m ph√°:</strong> H√£y th·ª≠ nh·∫≠p ƒë·ªãa ch·ªâ v√≠ c·ªßa b·∫°n 
                  ho·∫∑c c√°c ƒë·ªãa ch·ªâ v√≠ n·ªïi ti·∫øng ƒë·ªÉ xem k·∫øt qu·∫£!
                </p>
                <div className="flex flex-wrap justify-center gap-2 mt-2">
                  <Badge variant="outline" className="text-xs font-mono">
                    0x742d35Cc6634C0532925a3b8D8695BB00CF1B8EF
                  </Badge>
                  <Badge variant="outline" className="text-xs font-mono">
                    0x8ba1f109551bD432803012645Hac136c72BdA28D
                  </Badge>
                </div>
              </AlertDescription>
            </Alert>
          </div>

          <div className="mt-4">
            <p className="text-xs text-gray-500">
              D·ª± √°n h·ªçc t·∫≠p ‚Ä¢ Base Network ‚Ä¢ ERC1155 ‚Ä¢ TypeScript
            </p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
